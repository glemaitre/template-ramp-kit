language: python
env:
  - PYTHON_VERSION=2.7 IPYTHON_KERNEL=python2
  - PYTHON_VERSION=3.6 IPYTHON_KERNEL=python3
before_install:
    - wget -q http://repo.continuum.io/miniconda/Miniconda-3.6.0-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b -p /home/travis/miniconda
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda update --yes --quiet conda
    - |

      declare -r SSH_FILE="$(mktemp -u $HOME/.ssh/XXXXX)"
      openssl aes-256-cbc -K $encrypted_111f881c969d_key -iv $encrypted_111f881c969d_iv -in ".travis/travis_key.enc" -out "$SSH_FILE" -d
      chmod 600 "$SSH_FILE" && printf "%s\n Host github.com IdentityFile $SSH_FILE LogLevel ERROR" >> ~/.ssh/config
      eval `ssh-agent -s`
      ssh-add "$SSH_FILE"
install:
    - conda create -n testenv --yes pip python=$PYTHON_VERSION
    - source activate testenv
    - conda install --yes --quiet numpy scipy matplotlib scikit-learn pandas jupyter seaborn nose
    - python -m ipykernel install --user
    - pip install codecov
    - pip install -q flake8
    # Install the RAMP workflow
    - cd ..
    # for testing
    - git clone https://github.com/glemaitre/ramp-workflow.git
    # - git clone https://github.com/paris-saclay-cds/ramp-workflow.git
    - cd ramp-workflow
    # for testing
    - git checkout refactoring
    - pip install .
    # go back to the ramp toolkit
    - cd $TRAVIS_BUILD_DIR
    # Download the private data through sftp
    - mkdir private_data
    - sftp -oStrictHostKeyChecking=no glemaitre@anakim.u-bourgogne.fr:/data/ramp-data/template-ramp-kit/train.csv private_data
    - sftp -oStrictHostKeyChecking=no glemaitre@anakim.u-bourgogne.fr:/data/ramp-data/template-ramp-kit/test.csv private_data
    - ls private_data
script:
    - flake8 .
    - jupyter nbconvert --execute template-ramp-kit.ipynb --ExecutePreprocessor.kernel_name=$IPYTHON_KERNEL
    - nosetests -s -v tests
after_success:
    - codecov
notifications:
  email: true
