language: python
env:
  - PYTHON_VERSION=2.7 IPYTHON_KERNEL=python2
  - PYTHON_VERSION=3.6 IPYTHON_KERNEL=python3
before_install:
    - wget -q http://repo.continuum.io/miniconda/Miniconda-3.6.0-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b -p /home/travis/miniconda
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda update --yes --quiet conda
    - |

       $(npm bin)/set-up-ssh --key "$encrypted_111f881c969d_key" \
                             --iv "$encrypted_111f881c969d_iv" \
                             --path-encrypted-key ".travis/travis_key.enc"
    # - |

    #    declare -r SSH_FILE="$(mktemp -u $HOME/.ssh/travis_key)"

    #    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    #    # Decrypt the file containing the private key
    #    # (Note: this is the same as what is generated by the Travis CLI at step 2.5)

    #    openssl aes-256-cbc \
    #      -K $encrypted_111f881c969d_key \
    #      -iv $encrypted_111f881c969d_iv \
    #      -in ".travis/travis_key.enc" \
    #      -out "$SSH_FILE" -d

    #    # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    #    # Enable SSH authentication

    #    chmod 600 "$SSH_FILE" \
    #      && printf "%s\n" \
    #           "Host github.com" \
    #           "  IdentityFile $SSH_FILE" \
    #           "  LogLevel ERROR" >> ~/.ssh/config

install:
    - conda create -n testenv --yes pip python=$PYTHON_VERSION
    - source activate testenv
    - conda install --yes --quiet numpy scipy matplotlib scikit-learn pandas jupyter seaborn
    - python -m ipykernel install --user
    - pip install codecov
    - pip install -q flake8
    # Install the RAMP workflow
    - cd ..
    # for testing
    - git clone https://github.com/glemaitre/ramp-workflow.git
    # - git clone https://github.com/paris-saclay-cds/ramp-workflow.git
    - cd ramp-workflow
    # for testing
    - git checkout refactoring
    - pip install .
    # go back to the ramp toolkit
    - cd $TRAVIS_BUILD_DIR
script:
    - flake8 .
    - jupyter nbconvert --execute template-ramp-kit.ipynb --ExecutePreprocessor.kernel_name=$IPYTHON_KERNEL
    - coverage run test_submissions.py
    - coverage run test_backend.py
after_success:
    - codecov
notifications:
  email: true
